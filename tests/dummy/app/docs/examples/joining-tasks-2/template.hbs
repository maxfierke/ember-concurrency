<h2>Awaiting Multiple Child Tasks (or, cancelable Promise.all, Promise.race)</h2>

<p>
  This is a rewrite of the {{link-to 'Awaiting Multiple Child Tasks' 'docs.examples.joining-tasks'}}
  example, using encapsulated-tasks and completion state on task objects.
</p>

<h2>Live Example</h2>

{{#docs-demo as |demo|}}
  {{#demo.example name='joining-tasks-2-template.hbs'}}
    <h4>Status: {{status}}</h4>

    <p>
      <button class="button" onclick={{perform parent 'all'}}>all()</button>
      <button class="button" onclick={{perform parent 'race'}}>race()</button>
    </p>

    {{#each childTasks as |ti|}}
      <div class="progress-outer">
        <div class="progress-inner" style={{progress-style ti.percent ti.id colors}}>
          Progress: {{ti.percent}}%
          {{#if ti.value}}
            Word: {{ti.value}}
          {{/if}}
        </div>
      </div>
    {{/each}}
  {{/demo.example}}

  {{demo.snippet "joining-tasks-2.js" label='controller.js'}}
  {{demo.snippet "joining-tasks-2-template.hbs" label='template.hbs'}}
{{/docs-demo}}
